#N canvas 842 184 960 995 12;
#X obj 62 53 inlet;
#X obj 60 80 route bang;
#X obj 100 140 route set;
#X obj 140 320 array max \$1;
#X msg 100 180 symbol \$1;
#X obj 160 380 array size \$1;
#X obj 60 820 array set \$1;
#X obj 160 440 until;
#X obj 160 480 f;
#X obj 200 480 + 1;
#X obj 140 640 array get \$1;
#X obj 100 780 f;
#X obj 40 600 r \$0-set;
#X obj 100 200 s \$0-set;
#X msg 160 160 bang;
#X obj 260 220 r \$0-set;
#X obj 83 415 s \$0-max;
#X obj 320 660 r \$0-max;
#X text 60 40 Bang;
#X obj 40 200 t b b b;
#X obj 140 280 array min \$1;
#X obj 80 760 f;
#X obj 160 520 t b f b b f;
#X obj 40 380 s \$0-min;
#X obj 240 660 r \$0-min;
#X text 340 180 Normalise an array TO [-1 \, 1] NOT [0 \, 1]. From
its maximum given as creational argument \, or set with a 'set array-name'
message., f 42;
#X obj 140 700 expr 2 * ($f1 - $f2) / ($f3 - $f2) - 1;
#X floatatom 280 440 5 0 0 0 - - -, f 5;
#X text 340 260 Seems that 'array get' and the likes are awfully slow
\, so this thing is actually unusable with large sample arrays...,
f 42;
#X connect 0 0 1 0;
#X connect 1 0 19 0;
#X connect 1 1 2 0;
#X connect 2 0 4 0;
#X connect 2 0 13 0;
#X connect 2 1 14 0;
#X connect 3 0 16 0;
#X connect 4 0 13 0;
#X connect 5 0 27 0;
#X connect 5 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 0 22 0;
#X connect 9 0 8 1;
#X connect 10 0 26 0;
#X connect 11 0 6 1;
#X connect 12 0 10 0;
#X connect 12 0 6 0;
#X connect 14 0 3 0;
#X connect 15 0 5 0;
#X connect 15 0 3 0;
#X connect 15 0 20 0;
#X connect 17 0 26 2;
#X connect 19 0 5 0;
#X connect 19 1 3 0;
#X connect 19 2 20 0;
#X connect 20 0 23 0;
#X connect 21 0 6 0;
#X connect 22 0 21 0;
#X connect 22 1 6 1;
#X connect 22 3 10 0;
#X connect 22 4 10 1;
#X connect 24 0 26 1;
#X connect 26 0 21 1;
